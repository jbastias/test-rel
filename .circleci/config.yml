defaults: &defaults
  working_directory: ~/tmp
  docker:
    - image: circleci/node:lts

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/tmp
      - restore_cache:
          name: Restore NPM Package Cache
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: fs info
          command: |
            pwd
            ls -trl /
            ls -trl /tmp
            ls -trl

      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: create some tmp files
          command: |
            echo Running test
            mkdir -p /tmp/temp-files
            touch /tmp/temp-files/one
            touch /tmp/temp-files/two
            touch /tmp/temp-files/three
            ls -ltr /tmp/temp-files
            mv /tmp/temp-files ~/

      - save_cache:
          name: Save NPM Package Cache
          key: npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/npm
      - persist_to_workspace:
          root: .
          paths:
            - .
            # - /tmp/temp-files

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Execute Linter
          command: npm run lint
      - run:
          name: fs info
          command: |
            pwd
            ls -trl /
            ls -trl /tmp
            ls -trl

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Run Unit Tests
          command: npm run test

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: build app
          command: npm run build
      - run:
          name: deploy to npm
          command: npx semantic-release
      - persist_to_workspace:
          root: .
          paths: .

workflows:
  version: 2
  test-rel:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - build:
          requires:
            - test
          # filters:
          #   branches:
          #     only:
          #       - master

