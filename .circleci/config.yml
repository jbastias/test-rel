defaults: &defaults
  working_directory: ~/tmp
  docker:
    - image: circleci/node:lts

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/tmp
      - restore_cache:
          name: Restore NPM Package Cache
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          name: Save NPM Package Cache
          key: npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/npm
      - persist_to_workspace:
          root: .
          paths: .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Execute Linter
          command: npm run lint

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Run Unit Tests
          command: npm run test

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: build app
          command: npm run build
      - run:
          name: deploy to npm
          command: npx semantic-release
      - persist_to_workspace:
          root: .
          paths: .

workflows:
  version: 2
  test-rel:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - build:
          requires:
            - test
          # filters:
          #   branches:
          #     only:
          #       - master

# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:lts

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/tmp

#     steps:
#       - checkout

#       # Download and cache dependencies
#       # - restore_cache:
#       #     keys:
#       #       - v1-dependencies-{{ checksum "package.json" }}
#       #       # fallback to using the latest cache if no exact match is found
#       #       - v1-dependencies-

#       - run: npm run install

#       # - save_cache:
#       #     paths:
#       #       - node_modules
#       #     key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       # - run: yarn test


# workflows:
#   version: 2
#   test-rel:
#     jobs:
#       - build
