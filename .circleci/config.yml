defaults: &defaults
  working_directory: ~/tmp
  docker:
    - image: circleci/node:lts

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/tmp
      - restore_cache:
          name: Restore NPM Package Cache
          keys:
            - npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: fs info
          command: |
            pwd
            ls -trl /
            ls -trl /tmp
            ls -trl

      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: create some tmp files
          command: |
            echo Running test
            mkdir -p /tmp/temp-files
            touch /tmp/temp-files/one
            touch /tmp/temp-files/two
            touch /tmp/temp-files/three
            ls -ltr /tmp/temp-files
            mv /tmp/temp-files ~/tmp
            echo ""
            ls -ltr ~/
            echo ""
            ls -ltr ~/tmp

      - save_cache:
          name: Save NPM Package Cache
          key: npm-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/npm
      - persist_to_workspace:
          root: .
          paths:
            - .
            # - /tmp/temp-files

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Execute Linter
          command: npm run lint
      - run:
          name: fs info
          command: |
            pwd
            echo ""
            ls -trl /
            echo ""
            ls -trl /tmp
            echo ""
            ls -trl
            echo ""
            ls -trl ~/tmp

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Run Unit Tests
          command: npm run test

  latest-version:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Get latest version
          command: |
              git fetch --all
              git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1) | tail -n 1 | sed "s/^v//" > ___LATEST_VERSION___
              cat ___LATEST_VERSION___
      - persist_to_workspace:
          root: .
          paths: .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: build app
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Authenticate with NPM registry
          command: npm config set "//registry.npmjs.org/:_authToken" $NPM_TOKEN
      - run:
          name: deploy to npm
          command: |
            SUCCESS=`npx semantic-release`
            echo "SUCCESS: $SUCCESS"

workflows:
  version: 2
  test-rel:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - latest-version:
          requires:
            - checkout
      - build:
          requires:
            - test
            - latest-version
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
